{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nconst startButton = document.querySelector('[data-start]');\nconst dateInput = document.querySelector('#datetime-picker');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nstartButton.disabled = true;\n\nflatpickr(dateInput, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    const now = new Date();\n\n    if (selectedDate <= now) {\n      iziToast.warning({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startButton.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startButton.disabled = false;\n    }\n  },\n});\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  dateInput.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const delta = userSelectedDate - now;\n\n    if (delta <= 0) {\n      clearInterval(timerId);\n      updateTimer(0);\n      dateInput.disabled = false;\n      return;\n    }\n\n    updateTimer(delta);\n  }, 1000);\n});\n\nfunction updateTimer(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  daysSpan.textContent = addLeadingZero(days);\n  hoursSpan.textContent = addLeadingZero(hours);\n  minutesSpan.textContent = addLeadingZero(minutes);\n  secondsSpan.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["startButton","dateInput","daysSpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","timerId","flatpickr","selectedDates","selectedDate","iziToast","delta","updateTimer","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"+IAKA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAAmB,KACnBC,EAAU,KAEdP,EAAY,SAAW,GAEvBQ,EAAUP,EAAW,CACnB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQQ,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAGhCC,GAFQ,IAAI,MAGdC,EAAS,QAAQ,CACf,QAAS,qCACT,SAAU,UAClB,CAAO,EACDX,EAAY,SAAW,KAEvBM,EAAmBI,EACnBV,EAAY,SAAW,GAE1B,CACH,CAAC,EAEDA,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBC,EAAU,SAAW,GAErBM,EAAU,YAAY,IAAM,CAE1B,MAAMK,EAAQN,EADF,IAAI,KAGhB,GAAIM,GAAS,EAAG,CACd,cAAcL,CAAO,EACrBM,EAAY,CAAC,EACbZ,EAAU,SAAW,GACrB,MACD,CAEDY,EAAYD,CAAK,CAClB,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAYC,EAAI,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDZ,EAAS,YAAckB,EAAeL,CAAI,EAC1CZ,EAAU,YAAciB,EAAeJ,CAAK,EAC5CZ,EAAY,YAAcgB,EAAeH,CAAO,EAChDZ,EAAY,YAAce,EAAeF,CAAO,CAClD,CAEA,SAASC,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}